/*
 * Text
 */

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}

.text-justify {
    text-align: justify;
}

.text-justify-full {
    @extend .text-justify;

    @supports (text-align-last: justify) {
        text-align-last: justify;
    }

    @supports (not (text-align-last: justify)) {
        &::after {
            content: "";
            display: inline-block;
            width: 100%;
        }
    }
}

@for $i from 1 through 9 {
    $weight: $i * 100;
    .fw-#{$weight} {
        font-weight: $weight;
    }
}

.font-size-large {
    font-size: 1.5em;
}

.font-size-double {
    font-size: 2em;
}

.shadow {
    text-shadow: 2px 1px 6px $shadow-color;
}

.full-shadow {
    text-shadow: 0 0 0.24em black;
}

.font-smoothing-normal {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
}

.font-smoothing-dark {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.avoid-wrap {
    //text-wrap: avoid; //css3
    white-space: nowrap;
}

.no-select {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

/*
 * Block Styles
 */

.border-between {
    @extend .border-basic-b;

    &:last-of-type {
        border-bottom: 0;
    }
}

.border-around {
    @extend .border-basic-b;

    &:first-of-type {
        @extend .border-basic-t;
    }
}

/*
 * Links
 */

.subtle-link {
    color: inherit;
    text-decoration: none;

    &:visited {
        color: inherit;
    }

    &:hover {
        color: inherit;
        text-decoration: underline;
    }
}

.subtle-icon {
    @extend .subtle-link;

    &:hover {
        text-decoration: none;
    }
}

/*
 * Images
 */

.bg-img {
    @include background-image;
}

.object-fit-cover {
    @extend .relative, .bg-img;

    & > img {
        @extend .fill-parent;
        object-fit: cover;
    }
}

/*
 * Transforms
 */

.hw-accel {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
}

.translate-x-left {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
}

.translate-x-right {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
}

.translate-x-none {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
}

.flip-x {
    -webkit-transform: rotate3d(1, 0, 0, 180deg);
    transform: rotate3d(1, 0, 0, 180deg);
}

.no-backface {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

/*
 * Transitions
 */

.t-default {
    -webkit-transition: $trans-default;
    transition: $trans-default;
}

.t-inherit {
    -webkit-transition: inherit;
    transition: inherit;
}

.t-deep > * {
    @extend .t-inherit;
}

.t-none {
    -webkit-transition: 0s;
    transition: 0s;
}

/*
 * Hover
 */

.hover-fade-in {
    opacity: 0;
    -webkit-transition: opacity $trans-default;
    transition: opacity $trans-default;

    @include hover {
        opacity: 1;
    }
}

.hover-scale {
    transform: scale(1) translateZ(0);

    @include hover {
        transform: scale(1.05) translateZ(0);
    }
}

.hover-lighten {
    @extend .relative;

    &::after {
        @extend .fill-parent, .t-inherit;
        content: "";
        background-color: rgba(white, 0);
    }

    @include hover {
        &::after {
            background-color: rgba(white, 0.1);
        }
    }
}

.hover-blur {
    @include blur(0);
    -webkit-transition: -webkit-filter $trans-default;
    transition: filter $trans-default;

    @include hover {
        @include blur(5px);
    }
}

/*
 * Target
 */

.target-display {
    display: none;

    &:target {
        display: inherit;
    }
}
